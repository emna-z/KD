---
title: "KD processed data analysis"
author: "EZ"
date-modified: "Last compiled on `r format(Sys.time(), '%d %B, %Y')`" 
format: 
  html:
    html-math-method: katex
    toc: true
    toc-location: left
    toc-depth: 5
    toc_float:
      collapsed: true
      smooth_scroll: true
    code-fold: true  
    highlight-style: a11y-dark
    default-image-extension: svg
theme:
  light: flatly
  dark: darkly
execute:
  warning: false
editor: visual
---

## Context

This document compiles possible data visualizations made using processed data received from Soilytex.

## Bacteria diversity

The 16S rRNA gene has been a mainstay of sequence-based bacterial analysis for decades. The \~1500â€‰bp 16S rRNA gene comprises nine variable regions throughout the highly conserved 16S sequence. I do not have the information if soilytix uses 3^d^ generation sequencing (*i.e* long read for full 16S) which would lead to the best taxonomic resolution ([Johnson et al. 2019](https://rdcu.be/edQHU)).

### Relative abundance data

#### Class:

We can also visualize the relative abundance of the most abundant classes.

```{r}
#| label: Top classes per sample
#| results: hide
#| echo: True
#| warning: false

library("tidyverse")
library("kableExtra")
library("readxl")
library("Hmisc")


map <- read_excel("data/Book4.xlsx", 
                  sheet = "maps") %>% 
  dplyr::mutate(Sample_ID = as.factor(Sample_ID))


class <- read_csv2("data/16S_Abundance_class.csv") %>% 
  dplyr::mutate(Sample_ID = as.factor(Sample_ID)) %>% 
  dplyr::mutate_if(is.character, as.factor) %>% 
  tidyr::pivot_longer(!Sample_ID, 
               names_to = "bacteria_class", 
               values_to = "RA_bacteria") %>% 
  dplyr::left_join(y = map, by = "Sample_ID" ) %>% 
  dplyr::arrange(desc(RA_bacteria)) %>% 
  dplyr::filter(!is.na(pile))
  # drop_na() %>%
  # dplyr::mutate(pile = fct_relevel(pile, c("T1", "T4", "T6", "T7", "T8", "T9","T10", "T11")))

classes_to_keep <- unique((class %>% filter(RA_bacteria>5))$bacteria_class)

class2 <- class %>%
  dplyr::mutate(bacteria_class, 
         bacteria_class = if_else(bacteria_class %nin% classes_to_keep, 
                                  str_c("Others <5%"), 
                                  bacteria_class)) %>%
  dplyr::mutate_if(is.character, as.factor) %>% 
  distinct() 

# the multiple copies of classes that are now labelled "Others <5%" produce a distorted effect when plotting
# to avoid that we'll sum the RA of all "Others <5%" for each condition and replace the multiple 
# entries by a single one

c_sum <- class2 %>% 
  filter(!is.na(pile)) %>% 
  filter(bacteria_class %in% "Others <5%") %>%
  group_by(Sample_ID) %>%
  dplyr::mutate(RA_bacteria= sum(RA_bacteria)) %>%
  distinct() 

class2 <- class2 %>% 
  filter(!is.na(pile)) %>% 
  filter(bacteria_class %nin% "Others <5%") %>%
  bind_rows(c_sum) %>% 
  dplyr::mutate(pile = fct_relevel(pile, c("T4", "T6", "T7","T1","T9",
                                           "T8", "T10", "T11")))
```

There are 13 classes with relative abundances \>5% summarized in the table below.

```{r}
#| label: table top classes bacteria
#| warning: false
#| echo: True

kbl(class2 %>% 
      dplyr::mutate(
        RA_bacteria = round(RA_bacteria, digits = 1)
        )
    ) %>%
  kable_paper() %>% 
  scroll_box(width = "100%", height = "300px")
```

```{r}
#| label: barplot classes
#| echo: True
#| warning: false
#| results: false
#| output: True
#| out-height: 100%
#| out-width: 100%
#| dev: svg


library("scales")
library("RColorBrewer")
library("ggtext")
library("glue")
library("ggpubr")
library("ggh4x")

ct <- c( "#7ce5e6", "#84eb86", "#3e2690","#399283",  "#173d61", "#b4b7d4", "#71114b", "#59a20c", "#dd3dca", "#18441b", "#fbacf6", "#5577b2", "#c9dd87", "#5a66f9")

plot <-ggplot(class2, 
              aes(x= pile,
                  y= RA_bacteria,
                  group = Sample_ID,
                  fill=fct_reorder(bacteria_class, RA_bacteria)))+
  geom_bar(stat="identity", 
           position="stack") +
  scale_fill_manual(values= rev(ct))+
  
  # scale_y_continuous(labels=percent, expand = c(0,0))+
  theme_minimal()+
  labs(fill = "Class Bacteria")+
  ylab("Relative Abundance (%)")+
  facet_grid2 (~time_months,
               scales="free_x",
               space = "free_x")+
  theme(strip.text.x = element_text(size = 12, 
                                    face="bold", 
                                    angle = 90, 
                                    vjust = 0.5,
                                    hjust = 0),
        strip.text.y = element_text(size = 10, 
                                    face="bold", 
                                    angle = 0),
        legend.title = element_text(size = 12, 
                                    face = "bold"), 
        legend.text = element_text(size = 10, 
                                   face = "bold"),
        axis.title.y = element_text(size= 12,
                                    face = "bold"),
        axis.text.y = element_text(size = 10, 
                                   face = "bold"),
        axis.text.x = element_text(size = 10, 
                                   face = "bold",
                                   angle = 90,
                                   hjust = 1, 
                                   vjust= 0.5,
                                   margin = margin(t = 1)),
        axis.title.x = element_text(size= 12,
                                    face = "bold",
                                    margin = 
                                      margin(t = 8)),
        axis.ticks.y = element_line(colour = "grey30"),
        panel.grid.major = element_line(colour = NA),
        panel.grid.minor = element_line(colour = NA))


plot

```

It seems as if the sum of classes doesn't add up to 100 (after checking their table, yes it doesn't). I am assuming this is because they delete unassigned ASVs/OTUs on each taxonomic rank.

#### Families at month 6

```{r}
#| label: table fam month 6
#| echo: True
#| warning: false
#| results: false

fam <- 
readxl::read_xlsx("./data/Klasmann_Deilmann_no2_dashboard_template_v06.xlsx",
                  sheet = "16S_Abundance_Family") %>% 
  dplyr::mutate(Sample_ID = as.factor(Sample_ID)) %>% 
  pivot_longer(!Sample_ID, 
               names_to = "bacteria_fam", 
               values_to = "RA_bacteria") %>% 
  dplyr::left_join(y = map, by = "Sample_ID" ) %>% 
  arrange(desc(RA_bacteria)) %>% 
  filter(time_months %in% c("6M")) %>% 
  mutate (bacteria_fam=str_remove(bacteria_fam, "f__"))
  

fam_to_keep <- unique((fam %>% filter(RA_bacteria>3))$bacteria_fam)

fam2 <- fam %>%
  dplyr::mutate(bacteria_fam, 
         bacteria_fam = if_else(bacteria_fam %nin% fam_to_keep, 
                                  str_c("Others <3%"), 
                                  bacteria_fam)) %>%
  dplyr::mutate_if(is.character, as.factor)  


f_sum <- fam2 %>% 
  filter(bacteria_fam %in% "Others <3%") %>%
  group_by(Sample_ID) %>%
  dplyr::mutate(RA_bacteria= sum(RA_bacteria)) %>%
  distinct() 

fam2 <- fam2 %>% 
  filter(bacteria_fam %nin% "Others <3%") %>%
  bind_rows(f_sum) %>% 
  dplyr::mutate(pile = fct_relevel(pile, c("T4", "T6", "T7","T1","T9",
                                           "T8", "T10", "T11")))

```

```{r}
#| label: barplot fam month 6
#| echo: True
#| warning: false
#| results: false
#| output: True
#| out-height: 100%
#| out-width: 100%
#| dev: svg
  
library("scales")
library("RColorBrewer")
library("ggtext")
library("glue")
library("ggpubr")
library("ggh4x")

plot <-ggplot(fam2, 
              aes(x= pile,
                  y= RA_bacteria,
                  group = Sample_ID,
                  fill=fct_reorder(bacteria_fam, RA_bacteria)))+
  geom_bar(stat="identity", 
           position="stack") +
  scale_fill_manual(values= rev(ct))+
  
  # scale_y_continuous(limits = c(0,80))+
  theme_minimal()+
  labs(fill = "Family Bacteria")+
  ylab("Relative Abundance (%)")+
  xlab("")+
  # facet_grid2 (~time_months,
  #              scales="free_x",
  #              space = "free_x")+
  theme(legend.title = element_text(size = 12, 
                                    face = "bold"), 
        legend.text = element_text(size = 10, 
                                   face = "bold"),
        axis.title.y = element_text(size= 12,
                                    face = "bold"),
        axis.text.y = element_text(size = 10, 
                                   face = "bold"),
        axis.text.x = element_text(size = 10, 
                                   face = "bold",
                                   angle = 90,
                                   hjust = 1, 
                                   vjust= 0.5,
                                   margin = margin(t = 1)),
        axis.title.x = element_text(size= 12,
                                    face = "bold",
                                    margin = margin(t = 8)),
        panel.grid.major = element_line(colour = NA),
        panel.grid.minor = element_line(colour = NA),
        axis.ticks.y = element_line(colour = "grey30"))


plot

```

#### Species:

I am assuming that relative abundances are expressed in percentages per Sample-ID and per sequenced region (here 16S).

```{r}

#| label: loading data
#| results: hide
#| warning: false

library("kableExtra")
library("readxl")
library("Hmisc")
library("tidyverse")



species <- read_csv2("data/16S_Abundance_Species.csv") %>% 
  dplyr::mutate(Sample_ID = as.factor(Sample_ID)) %>% 
  pivot_longer(!Sample_ID, names_to = "bacteria_species", values_to = "RA_bacteria") %>% 
  dplyr::left_join(y = map, by = "Sample_ID" ) %>% 
  dplyr::mutate_if(is.character,as.factor) %>% 
  arrange(desc(RA_bacteria))


# length(unique(species$bacteria_species))
# max(species$RA_bacteria)
```

```{r}
#| warning: false
#| echo: True
#| label: table species
#| results: false
kbl(species[1:300,]) %>%
  kable_paper() %>%
  column_spec(2, italic = TRUE) %>% 
  scroll_box(width = "100%", height = "300px")
```

there are 321 identified bacteria species. the maximum relative abundance calculated is \~9% whereas the median is 0 and the mean is \~1%.

##### Time series T4, T6 and T7

Here, I will focus on the top 5 identified species per sample

```{r}
#| label: Top 5 identified bacteria species per sample for timeseries
#| results: hide
#| warning: false

top5 <- species %>% 
  group_by(Sample_ID) %>% 
  filter(pile %in% c("T4", "T6", "T7")) %>% 
  slice_max(order_by = RA_bacteria, n = 5) %>% 
  ungroup() %>% 
  arrange(desc(RA_bacteria)) 
 # %>%  dplyr::mutate(pile = fct_relevel(pile, c("T1", "T4", "T6", 
 #                                    "T7", "T8", "T9","T10", "T11")))

top5_bact <- unique(top5$bacteria_species)

length(top5_bact)

top5 <- species %>% 
  filter(bacteria_species %in% top5_bact) %>% 
  filter(!is.na(pile)) %>% 
  filter(pile %in% c("T4", "T6", "T7")) %>% 
  arrange(desc(RA_bacteria)) 
```

There are 30 unique identified species forming the top 5 species in the T4, T6 and T7 time series.

```{r}
#| warning: false
#| echo: True
#| label: table top 5 species
kbl(top5) %>%
  kable_paper() %>%
  column_spec(2, italic = TRUE) %>% 
  scroll_box(width = "100%", height = "300px")
```

```{r }
#| label: heatmap species
#| echo: True
#| warning: false
#| out-height: 100%
#| out-width: 100%
#| output: True
#| results: false
#| dev: svg

library("scales")
library("RColorBrewer")
library("ggtext")
library("glue")
library("ggpubr")
library("ggh4x")

# color -------------------------------------------------------------------
gradient_base <- c("#f2edee")

grad <- function(x) colorRampPalette(c(gradient_base,x))(200)

# grad(c("#380282"))


# plot --------------------------------------------------------------------

p <- ggplot(data = top5,
                  mapping = aes( x = time_months,
                                 y= bacteria_species,
                                 fill = RA_bacteria)) +
  geom_tile() +
  scale_fill_gradientn(name = "relative abundance bacteria (%)",
                       colours =c("#f2edee","orange", "#380282") ,
                       na.value = "grey55",
                       values = rescale(x = c(0, 2.5, 10), 
                                        from = c(0, 10)),
                       limits=c(0,10))+ 
  facet_grid2(~ pile ,
             labeller = label_wrap_gen(multi_line = TRUE),
             switch = "y",
             space = "free",
             scales = "free") +
  # xlab(label = "time (months)") +
  labs(title = "Heatmap top 5 species in T4, T6 and T7 through time"
  )+
  theme_minimal() +
  theme(strip.placement = "outside",
        plot.title = element_text(hjust = 0.5),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8, 
                                   face = "bold.italic"),
        axis.text.x = element_text(size = 10, 
                                   face = "bold", 
                                   hjust = 0, 
                                   vjust= 0.5, 
                                   angle = 90),
        axis.title.x = element_blank(),
        strip.background = element_blank(),
        strip.text.y.left = element_text(size= 7, 
                                         face = "bold", 
                                         angle = 0),
        strip.background.x = element_rect (colour = c("#890100"),
                                          linetype = 1,
                                          linewidth = 1),
        # ggh4x.facet.nestline = element_line(colour = c("#380282")),
        strip.text.x = element_text(size= 8, 
                                    face = "bold"),
        legend.title = element_text(face = "bold", 
                                    size = 8,
                                    margin = margin(r = 10)),
        legend.text = element_text(size = 8),
        legend.position = "bottom" ,
        plot.title.position = "plot") +
  guides(fill = guide_colorbar(barwidth = 20, 
                               barheight = 0.8, 
                               title.vjust = 1))
p                                      

```

The following plot shows the same information but in a way that might make it easier to decipher differences between time points whilst the previous plot makes groups samples by pile.

```{r}
#| label: heatmap species2
#| echo: True
#| warning: false
#| results: false
#| output: True
#| out-height: 100%
#| out-width: 100%
#| dev: svg



library("scales")
library("RColorBrewer")
library("ggtext")
library("glue")
library("ggpubr")
library("ggh4x")

# color -------------------------------------------------------------------
gradient_base <- c("#f2edee")

grad <- function(x) colorRampPalette(c(gradient_base,x))(200)

# grad(c("#380282"))


# plot --------------------------------------------------------------------

p <- ggplot(data = top5,
                  mapping = aes( x = pile,
                                 y= bacteria_species,
                                 fill = RA_bacteria)) +
  geom_tile() +
  scale_fill_gradientn(name = "relative abundance bacteria (%)",
                       colours =c("#f2edee","orange", "#380282") ,
                       na.value = "grey55",
                       values = rescale(x = c(0, 2.5, 10), 
                                        from = c(0, 10)),
                       limits=c(0,10))+ 
  facet_grid2(~ time_months ,
             labeller = label_wrap_gen(multi_line = TRUE),
             switch = "y",
             space = "free",
             scales = "free") +
  # xlab(label = "time (months)") +
  theme_minimal() +
  labs(title = "Heatmap top 5 species in T4, T6 and T7 through time")+
  theme(strip.placement = "outside",
        plot.title = element_text(hjust = 0.5),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8, 
                                   face = "bold.italic"),
        axis.text.x = element_text(size = 10, 
                                   face = "bold", 
                                   hjust = 0, 
                                   vjust= 0.5, 
                                   angle = 90),
        axis.title.x = element_blank(),
        strip.background = element_blank(),
        strip.text.y.left = element_text(size= 7, 
                                         face = "bold", angle = 0),
        strip.background.x = element_rect (colour = c("#890100"),
                                          linetype = 1,
                                          linewidth = 1),
        # ggh4x.facet.nestline = element_line(colour = c("#380282")),
        strip.text.x = element_text(size= 8, face = "bold"),
        legend.title = element_text(face = "bold", 
                                    size = 8,
                                    margin = margin(r = 10)),
        legend.text = element_text(size = 8),
        legend.position = "bottom",
        plot.title.position = "plot") +
  guides(fill = guide_colorbar(barwidth = 20, 
                               barheight = 0.8, 
                               title.vjust = 1))


p                                      

```

Let's focus on month 6 since all types of compost were sampled then.

```{r}
#| label: Top 10 identified bacteria species at month 6 
#| results: hide 
#| warning: false  

top10 <- species %>%    
  group_by(Sample_ID) %>%    
  filter(time_months %in% c("6M")) %>%    
  slice_max(order_by = RA_bacteria, n = 10) %>%    
  ungroup() %>%   
  arrange(desc(RA_bacteria)) %>%    
  dplyr::mutate(pile = fct_relevel(pile, 
                            c( "T4", "T6","T7", "T1",
                               "T9","T8","T10", "T11")))  
top10_bact <- unique(top10$bacteria_species) 
length(top10_bact)

top10 <- species %>% 
  filter(!is.na(pile)) %>% 
  filter(bacteria_species %in% top10_bact) %>% 
  filter(time_months %in% c("6M")) %>%
  arrange(desc(RA_bacteria)) %>%    
  dplyr::mutate(pile = fct_relevel(pile, 
                            c( "T4", "T6","T7", "T1",
                               "T9","T8","T10", "T11"))) 


median(top10$RA_bacteria)
```

```{r}
#| label: heatmap species month 6
#| echo: True
#| warning: false
#| results: false
#| output: True
#| out-height: 100%
#| out-width: 100%
#| dev: svg



library("scales")
library("RColorBrewer")
library("ggtext")
library("glue")
library("ggpubr")
library("ggh4x")

# color -------------------------------------------------------------------
gradient_base <- c("#f2edee")

grad <- function(x) colorRampPalette(c(gradient_base,x))(200)

# grad(c("#380282"))


# plot --------------------------------------------------------------------

p <- ggplot(data = top10,
                  mapping = aes( x = pile,
                                 y= bacteria_species,
                                 fill = RA_bacteria)) +
  geom_tile() +
  scale_fill_gradientn(name = "relative abundance bacteria (%)",
                       colours =c("#f2edee","orange", "#380282") ,
                       na.value = "grey55",
                       values = rescale(x = c(0, 2.5, 10), 
                                        from = c(0, 10)),
                       limits=c(0,10))+ 
  theme_minimal() +
  labs(title = "Heatmap top 10 species at month 6")+
  theme(strip.placement = "outside",
        plot.title = element_text(hjust = 0.5),
        axis.title.y = element_blank(),
        axis.text.y = element_text(size = 8, 
                                   face = "bold.italic"),
        axis.text.x = element_text(size = 10, 
                                   face = "bold", 
                                   hjust = 0, 
                                   vjust= 0.5, 
                                   angle = 90),
        axis.title.x = element_blank(),
        strip.background = element_blank(),
        strip.text.y.left = element_text(size= 7, 
                                         face = "bold", angle = 0),
        strip.background.x = element_rect (colour = c("#890100"),
                                          linetype = 1,
                                          linewidth = 1),
        # ggh4x.facet.nestline = element_line(colour = c("#380282")),
        strip.text.x = element_text(size= 8, face = "bold"),
        legend.title = element_text(face = "bold", 
                                    size = 8,
                                    margin = margin(r = 10)),
        legend.text = element_text(size = 8),
        legend.position = "bottom" ,
        plot.title.position = "plot") +
  guides(fill = guide_colorbar(barwidth = 20, 
                               barheight = 0.8, 
                               title.vjust = 1))


p     
```

##### New production samples:

```{r}
#| label: Top 10 identified bacteria species in T1 & T9 -soilytix
#| results: hide
#| warning: false
#| echo: True

top10 <- species %>% 
  group_by(Sample_ID) %>% 
  filter(pile %in% c("T1", "T9")) %>% 
  slice_max(order_by = RA_bacteria, n = 10) %>% 
  ungroup() %>% 
  arrange(desc(RA_bacteria)) %>% 
  dplyr::mutate(pile = fct_relevel(pile, c("T1","T9")))

top10_bact <- unique(top10$bacteria_species)
length(top10_bact)

top10 <- species %>% 
  filter(bacteria_species %in% top10_bact) %>% 
  filter(pile %in% c("T1", "T9")) %>% 
  dplyr::mutate(pile = fct_relevel(pile, c("T1","T9")))%>%
  arrange(desc(RA_bacteria))  
  
  
```

```{r}
#| label: barplot species T1 & T9 - soilytix
#| echo: True
#| warning: false
#| results: false
#| output: True
#| out-height: 100%
#| out-width: 100%
#| dev: svg


plot <-ggplot(top10, 
              aes(x= fct_reorder(bacteria_species, RA_bacteria),
                  y= RA_bacteria,
                  fill= Sample_ID))+
  geom_bar(stat="identity", 
           position= "dodge") +
  scale_fill_manual("Sample",values= c( "#8a1c12", "#53c6ef","#48bf8e"))+
  scale_y_continuous(expand = c(0,0)) +
  theme_classic()+
  labs(title = "Top 10 bacterial species in pile 1 and pile 9 - soilytex")+
  ylab("Relative Abundance (%)")+
  xlab("bacteria species")+
  theme(plot.title.position = "plot",
        legend.position = c(0.8, 0.2),
        legend.title = element_text(face = "bold"),
        axis.title.y = element_text(size= 12,
                                    face = "bold"),
        axis.text.y = element_text(size = 10, 
                                   face = "bold.italic"),
        axis.text.x = element_text(size = 10,
                                   face = "bold",
                                   hjust = 0.5, 
                                   vjust= 0.5,
                                   margin = margin(t = 1)),
        axis.title.x = element_text(size= 12,
                                    face = "bold",
                                      margin(t = 8)),
        panel.grid.major = element_line(colour = NA),
        panel.grid.minor = element_line(colour = NA))+ 
  coord_flip()

plot
```

```{r}
#| label: Top 10 identified bacteria species in T1 & T9 and functions - me
#| results: hide
#| warning: false
#| echo: True

source("phyloseqing.R")
source("functions.R")
source("splitranks.R")

devtools::unload("mia")


top10 <- Species %>% 
  group_by(Sample_ID) %>% 
  filter(pile %in% c("T1", "T9")) %>%
  filter(Species %nin% c("unassigned")) %>% 
  slice_max(order_by = Species_rel_abund_Sample, n = 10) %>% 
  ungroup() %>% 
  arrange(desc(Species_rel_abund_Sample)) %>% 
  dplyr::mutate_if(is.character, as.factor) %>% 
  dplyr::mutate(pile = fct_relevel(pile, c("T1","T9"))) %>%
  dplyr::mutate(Sample_ID =as.factor(Sample_ID)) %>% 
  distinct()

top10_bact <- unique(top10$Species)
length(top10_bact)

top10 <- t3 %>% 
  filter(Species %in% top10_bact) %>% 
  filter(pile %in% c("T1", "T9")) %>% 
  dplyr::mutate(pile = fct_relevel(pile, c("T1","T9"))) %>% 
  dplyr::mutate(pile = fct_relevel(pile, c("T1","T9")))%>%
  filter(Species_rel_abund_Sample>0) %>% 
  arrange(desc(Species_rel_abund_Sample))  %>% 
  dplyr::mutate(Sample_ID =as.factor(Sample_ID)) %>% 
  dplyr::mutate(Species_rel_abund_Sample = Species_rel_abund_Sample*100) %>% 
  distinct() %>% 
  select(-ASV) %>% 
  distinct() %>% 
  unite("bact_f", Species, Functions, sep = " : ", remove = F) %>%
  mutate(Functions = str_replace_all(Functions, ", ", "\n"))
  
  
  
```

```{r}
#| label: barplot species T1 & T9 - me
#| echo: True
#| warning: false
#| results: false
#| output: True
#| out-height: 100%
#| out-width: 100%
#| dev: svg


plot <-ggplot(top10, 
              aes(x= fct_reorder(Species, Species_rel_abund_Sample),
                  y= Species_rel_abund_Sample,
                  fill= Sample_ID))+
  geom_bar(stat="identity", 
           position= "dodge") +
  scale_fill_manual("Sample",values= c( "#8a1c12", "#53c6ef","#48bf8e"))+
  scale_y_continuous(expand = c(0,0)) +
  theme_classic()+
  labs(title = "Top 10 bacterial species in pile 1 and pile 9 - me")+
  ylab("Relative Abundance (%)")+
  xlab("bacteria species")+
  theme(plot.title.position = "plot",
        legend.position = c(0.8, 0.2),
        legend.title = element_text(face = "bold"),
        axis.title.y = element_text(size= 12,
                                    face = "bold"),
        axis.text.y = element_text(size = 10, 
                                   face = "bold.italic"),
        axis.text.x = element_text(size = 10,
                                   face = "bold",
                                   hjust = 0.5, 
                                   vjust= 0.5,
                                   margin = margin(t = 1)),
        axis.title.x = element_text(size= 12,
                                    face = "bold",
                                      margin(t = 8)),
        panel.grid.major = element_line(colour = NA),
        panel.grid.minor = element_line(colour = NA))+ 
  coord_flip()

plot
```

```{r}
#| label: bubble plot species T1 & T9 - me
#| echo: True
#| warning: false
#| results: false
#| output: True
#| out-height: 100%
#| out-width: 100%
#| dev: svg


plot <-ggplot(top10, 
              aes(x= 
                    interaction(
                      fct_reorder(Species, Species_rel_abund_Sample),
                      Functions),
                  y = pile,
                  size = Species_rel_abund_Sample,
                  color= Sample_ID))+
  geom_count(alpha=0.5, position = "dodge") +
  scale_size( name="relative\nabundance (%)")+
  scale_x_discrete(guide=guide_axis_nested(delim="."))+
  scale_color_manual("Sample",values= c( "#8a1c12", "#53c6ef","#48bf8e"))+
  # scale_y_continuous(expand = c(0,0)) +
  theme_classic()+
  # labs(title = "Top 10 bacterial species in pile 1 and pile 9 - me")+
  # ylab("Relative Abundance (%)")+
  xlab("")+
  theme(plot.title.position = "plot",
        legend.position = "right",
        legend.title = element_text(face = "bold"),
        axis.title.y = element_text(size= 12,
                                    face = "bold"),
        axis.text.y = element_text(size = 10, 
                                   face = "bold.italic"),
        axis.text.x = element_text(size = 10,
                                   face = "bold",
                                   hjust = 0.5, 
                                   vjust= 0.5,
                                   margin = margin(t = 1)),
        axis.title.x = element_text(size= 12,
                                    face = "bold",
                                      margin(t = 8)),
        panel.grid.major = element_line(colour = NA),
        panel.grid.minor = element_line(colour = NA),
        aspect.ratio = 10/1
        )+ 
  coord_flip()

# plot
```

the plot above should be open separately (too big to fit page).\
![](species_functions_bubble.svg)

##### ordination species after 6 months:

```{r}
#| label: ordination species at month 6
#| echo: True
#| warning: false
#| results: false
#| output: True
#| out-height: 100%
#| out-width: 100%
#| dev: svg

 species6 <- dplyr::mutate(species,
                          abundance = round(RA_bacteria*Richness_16s)) %>% 
   filter(time_months %in% c("6M"))
 
 s_tab <- species6 %>% 
   select(bacteria_species, pile, abundance) %>% 
   pivot_wider(names_from = bacteria_species,
               values_from = abundance) %>% 
   column_to_rownames(var = "pile")
 

library(vegan)
library(ape)
```

### Alpha diversity indexes bacteria

Here I am just putting an example of visualization of the Shannon diversity index. The richness and evenness exact indexes weren't specified.

The Shannon Diversity Index (or Shannon-Weaver Index) is a way to measure the diversity of species in a community.

Denoted as H, this index is calculated as $H = \sum{p_i}*\ln({p_i})$ where ${p_i}$ is the proportion of the entire community made up of species *i*.

The higher the value of H, the higher the diversity of species in a particular community. The lower the value of H, the lower the diversity. A value of H = 0 indicates a community that only has one species.

```{r}
#| label: alpha div prep 
#| results: hide
#| warning: false

devtools::unload("mia")


alpha_div <- read.csv("data/functional data/alpha_div_indexes_microbiome_package.csv") %>% 
  dplyr::mutate(Sample_ID = as.factor(Sample_ID)) %>% 
  dplyr::mutate_if(is.character, as.factor) %>% 
  filter(!is.na(pile)) %>% 
  dplyr::mutate(pile = fct_relevel(pile, 
                            c( "T4", "T6","T7", "T1",
                               "T9","T8","T10", "T11")))


combo <- combn(levels(alpha_div$time_months), 2)

my_comparisons <- as.data.frame(combo) %>%
  sapply( function(x) as.character(x), simplify = FALSE)

library(ggpubr)

low <- function(x){mean(x)-sd(x)}

high <- function(x){mean(x)+sd(x)}
```

```{r}
#| label: Shannon diversity index 
#| results: hide
#| echo: True
#| output: false
#| warning: false
#| dev: svg

library(ggrepel)

p_shannon1 <- ggplot(data = alpha_div , 
                    aes (x = pile,
                         group = pile,
                         color = pile,
                         label = Sample_ID,
                         y= diversity_shannon)) +
  
  geom_point(size= 2, key_glyph = "rect")+
  geom_text(check_overlap = T, 
            size = 4, 
            hjust = 0, 
            nudge_x = 0.2) +
  stat_summary(fun="mean", 
               fun.min = low, 
               fun.max = high ,
               size=1, 
               shape= 4)+
  
   scale_color_manual(values = c("#dac925", "#93311c", "#84bc04", "#554bca", "#fca552", "purple3", "#3dd188", "#c41c8d"),
                     name = "pile")+
  
  
  # facet_wrap(~location)+
  
  xlab("")+
  ylab("Shannon diversity index")+
  theme_classic()+
  theme(axis.title.y = element_text(size = 12, 
                                    margin =margin(t=0,r=8,b=0,l=0)),
        axis.title.x = element_text(size = 12,  
                                    margin =margin(t=8,r=0,b=0,l=0)),
        axis.text.x = element_text(size = 12, 
                                   colour = "black",
                                   angle = 0, 
                                   vjust = 0.5, 
                                   hjust = 0.5),
        axis.text.y = element_text(size = 10, 
                                   colour = "black"),
        legend.text  = element_text(size = 11),
        legend.title = element_text(size = 11, 
                                    face = "bold"),
        strip.background = element_blank(),
        strip.text = element_text(size = 12, 
                                  face = "bold"))+
  # stat_compare_means(comparisons = my_comparisons,
  #                    method = "wilcox.test",
  #                    aes(label = after_stat(p.signif))) # Add pairwise comparisons p-value
  stat_compare_means(method = "kruskal.test",
                     label.y = 11 , label.x = 2) +
  guides(
  color = guide_legend(
    label.position = "top",
    override.aes = list(shape = 20, size = 1)
  ))

# p_shannon1


p_shannon2 <- ggplot(data = alpha_div , 
                    aes (x = time_months,
                         group = time_months,
                         label = Sample_ID,
                         y= diversity_shannon)) +
  
  geom_point(size= 2, key_glyph = "rect")+
  geom_text_repel() +
  stat_summary(fun="mean", 
               fun.min = low, 
               fun.max = high ,
               size=1, 
               shape= 4)+
  # scale_color_manual(values = c("#72e5ef", "#f1615f", "#913a98", "#4b7359", "#a6e590", "#505b8f", "#c79542"),
  #                    name = "time")+
  # 
  
  # facet_wrap(~location)+
  
  xlab("")+
  ylab("Shannon diversity index")+
  theme_classic()+
  theme(axis.title.y = element_text(size = 12, 
                                    margin =margin(t=0,r=8,b=0,l=0)),
        axis.title.x = element_text(size = 12,  
                                    margin =margin(t=8,r=0,b=0,l=0)),
        axis.text.x = element_text(size = 12, 
                                   colour = "black",
                                   angle = 0, 
                                   vjust = 0.5, 
                                   hjust = 0.5),
        axis.text.y = element_text(size = 10, 
                                   colour = "black"),
        legend.text  = element_text(size = 11),
        legend.title = element_text(size = 11, 
                                    face = "bold"),
        strip.background = element_blank(),
        strip.text = element_text(size = 12, 
                                  face = "bold"))+
  # stat_compare_means(comparisons = my_comparisons,
  #                    method = "wilcox.test",
  #                    aes(label = after_stat(p.signif))) +# Add pairwise comparisons p-value
  stat_compare_means(method = "kruskal.test" ,
                     label.x = 2,
                      ) + 
  guides(
  color = guide_legend(
    label.position = "top",
    override.aes = list(shape = 20, size = 1)
  ))

p_shannon2

#
```

```{r}
#| label: Shannon diversity index tables
# #| results: hide
# #| echo: True
# #| output: true
# #| warning: false
# #| out-height: 100%
# #| out-width: 100%
# #| dev: svg
# 
# 
# # ggpubr::compare_means(data = alpha_div,
# #                       formula = Shannon ~ time_months,
# #                       method = "kruskal.test",
# #                       p.adjust.method = "BH",
# #                       paired = T)
# 
# pl <- 
#   ggpubr::ggarrange(p_shannon1,
#                   p_shannon2,
#                   common.legend = F,
#                   legend = "none",
#                   ncol = 2,
#                   labels = c("A)", "B)")
#                   )
# cap <- expression("Shannon diversity index values. \nThe samples are grouped by time the X marks the mean. \nThe line represents the standard deviation.")
# 
# annotate_figure(
#         annotate_figure(pl,
#                 bottom =text_grob(paste(cap)),
#         )
# )
```

### Beta diversity

the values provided are coordinates on two axes without mentioning which data, which distance or which ordination were used.

So, if I just plot what's in the file that's what I would get.

```{r}
#| label: beta div
#| results: hide
#| echo: True
#| output: True
#| warning: false
#| out-width: 80%
#| out-height: 80%
#| dev: svg

library(ggrepel)
map <- read.csv("./data/functional data/functional data/mapfile.csv", 
                            row.names = 1, 
                            fileEncoding= "windows-1252",
                            na.strings = c("NA", "", " ")) %>% 
    dplyr::mutate(Sample_ID = as.factor(Sample_ID))  


beta <- read_csv2("data/beta_div_16s.csv") %>% 
  dplyr::mutate(Sample_ID = as.factor(Sample_ID)) %>% 
  dplyr::left_join(y = map, by = "Sample_ID" ) %>% 
  dplyr::mutate_if(is.character, as.factor) %>% 
  filter(!is.na(pile)) %>% 
  dplyr::mutate(pile = fct_relevel(pile, 
                            c( "T4", "T6","T7", "T1",
                               "T9","T8","T10", "T11")))


col24 <- c("#52ef99", "#860967", "#b3e61c", "#1932bf", "#c7dd91", "#dc35dc", "#0ca82e", "#fe1d66", "#51f310", "#e68dd9", "#0c5f31", "#f17a74", "#41c9dc", "#a63838", "#2480a1", "#fe5900", "#523d6e", "#fabd2a", "#6524ff", "#7b9b47", "#846dff", "#f4bb8f", "#653d28", "#afc6fe")

col8 <- c("#aee39a", "#806641","#1c35b7", "#93311c", "#dbbbec",  "#f5a952", "#3a78c3", "#dac925")

coll <- c("#dac925", "#93311c", "#84bc04", "#554bca", "#fca552", "purple3", "#3dd188", "#c41c8d")

b <- ggplot(data = beta,
            aes(x = PCo1,
                y = PCo2,
                shape = time_months,
                colour = pile,
                label = Sample_ID))+
  geom_point(size = 3)+
  geom_text_repel(show.legend = F) +
  scale_color_manual(values = coll)+
  scale_shape_manual(values= rev(c(18,17,7,4,16,3,8)))+
  theme_classic()+
  theme(axis.title.y = element_text(size = 12, 
                                    margin =margin(t=0,r=8,b=0,l=0)),
        axis.title.x = element_text(size = 12,  
                                    margin =margin(t=8,r=0,b=0,l=0)),
        axis.text.x = element_text(size = 12, 
                                   colour = "black",
                                   angle = 0, 
                                   vjust = 0.5, 
                                   hjust = 0.5),
        axis.text.y = element_text(size = 10, 
                                   colour = "black"),
        legend.text  = element_text(size = 11),
        legend.title = element_text(size = 11, 
                                    face = "bold"),
        strip.background = element_blank(),
        strip.text = element_text(size = 12, 
                                  face = "bold"))



b

```

Usually axis 1 / axis x or PCo1 is the dimension that explains the most variance in the dataset even if it is unknown exactly here. What we can see mostly here is that the microbial community is discriminated by the variable time mostly. on that axis from right to left, one can follow a progression mainly in the 3 first months. after that, the influence of time seems to diminish. I don't have enough knowledge about the samples to be able to guess what might be the variables behind the scatter of the samples.
